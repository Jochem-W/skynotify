services:
  app:
    container_name: skynotify-app
    build: app
    restart: unless-stopped
    depends_on:
      - db
    environment:
      NEXT_PUBLIC_HOSTNAME: "${PUBLIC_HOSTNAME}"
      NEXT_PUBLIC_VAPID_KEY: "${PUBLIC_VAPID_KEY}"
      DATABASE_URL: "postgres://skynotify:${POSTGRES_PASSWORD}@db/skynotify"
      EMAIL: "${EMAIL}"
  db:
    image: postgres:17
    restart: unless-stopped
    environment:
      POSTGRES_USER: "skynotify"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
    volumes:
      - skynotify-data:/var/lib/postgresql/data
  influx:
    image: influxdb:2
    container_name: skynotify-influx
    restart: unless-stopped
    environment:
      DOCKER_INFLUXDB_INIT_MODE: "setup"
      DOCKER_INFLUXDB_INIT_USERNAME: "skynotify"
      DOCKER_INFLUXDB_INIT_PASSWORD: "${INFLUXDB_PASSWORD}"
      DOCKER_INFLUXDB_INIT_ORG: "skynotify"
      DOCKER_INFLUXDB_INIT_BUCKET: "notification"
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: "${INFLUXDB_ADMIN_TOKEN}"
      INFLUXD_UI_DISABLED: "${INFLUXD_UI_DISABLED}"
    volumes:
      - influx-data:/var/lib/influxdb2
      - influx-config:/etc/influxdb2
  server:
    build: server
    restart: unless-stopped
    depends_on:
      - db
      - influx
    environment:
      DATABASE_URL: "postgres://skynotify:${POSTGRES_PASSWORD}@db/skynotify"
      INFLUXDB_ADMIN_TOKEN: "${INFLUXDB_ADMIN_TOKEN}"

volumes:
  skynotify-data:
